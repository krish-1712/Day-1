Difference between HTTP1.1 vs HTTP2

HTTP/1.1:

1)HTTP/1.1 year- 1997

2)It supports connection reuse i.e. for every TCP connection there could be multiple requests and responses,
and pipelining where the client can request several resources from the server at once.  

3)Introduces a warning header field to carry additional information about the status of a message. 
Can define 24 status codes, error reporting is quicker and more efficient.

4)It is relatively secure since it uses digest authentication, NTLM authentication.

5)Expands on the caching support by using additional headers like cache-control,
conditional headers like If-Match and by using entity tags.

6)HTTP/1.1 provides faster delivery of web pages and reduces web traffic as compared to HTTP/1.0.

HTTP/2:

1)HTTP/2 year-2015

2)Uses multiplexing, where over a single TCP connection resources to be delivered are interleaved 
and arrive at the client almost at the same time. It is done using streams which can be prioritized, 
can have dependencies.

3)Underlying semantics of HTTP such as headers, status codes remains the same.

4)Security concerns from previous versions will continue to be seen in HTTP/2.


5)HTTP/2 does not change much in terms of caching. With the server push feature if the client finds the resources 
are already present in the cache, it can cancel the pushed stream.

6)HTTP/2 utilizes multiplexing and server push to effectively reduce the page load time by a greater margin along with 
being less sensitive to network delays.


objects and its internal representation in Javascript:

1) Objects, in JavaScript, is it’s most important data-type and forms the building blocks for modern JavaScript. 
These objects are quite different from JavaScript’s primitive data-types(Number, String, Boolean, null, undefined and symbol).

 2) Objects are more complex and each object may contain any combination of these primitive data-types as well as reference 
 data-types.An object, is a reference data type. Variables that are assigned a reference value are given a reference or a 
 pointer to that value.That reference or pointer points to the location in memory where the object is stored. 
 The variables don’t actually store the value.

 3) objects in JavaScript may be defined as an unordered collection of related data, of primitive or reference types, 
 in the form of “key: value” pairs. These keys can be variables or functions and are called properties and methods, 
 respectively, in the context of an object.

